---
- hosts: localhost
  become: true

  vars:
    backup_cron_job_state: "present"
    # Backup every 1 hour
    # Syntax: 0 * * * *
    # REF: https://cron.help/every-1-hour
    backup_hour: "*"
    backup_minute: "0"
    backup_user: "root"
    backup_path: "/root/backups"
    backup_directories:
      - "/"
    backup_exclude_items:
      - "/dev"
      - ".DS_Store"
      - "/etc/mtab"
      - "/home/**/.ansible"
      - "/home/**/.ansible_async"
      - "/home/**/.cache"
      - "/home/**/Cache"
      - "/home/**/code/pkg/mod"
      - "/home/**/.devenv*"
      - "/home/**/.dropbox*"
      - "/home/**/Dropbox"
      - "/home/**/.local"
      # TODO: This is excluding .git/logs
      - "/home/**/logs"
      - "/home/**/.mozilla/firefox/**/datareporting"
      - "/home/**/.mozilla/firefox/**/storage/default"
      - "/home/**/Nextcloud"
      - "/home/**/*.vbox"
      - "/home/**/.venv"
      - "/lost+found"
      - "/nix/store"
      - "/nix/var/nix"
      - "/proc"
      - "/run"
      - "/swapfile"
      - "/sys"
      - "/tmp"
      - "/var/backups"
      - "/var/cache/apt/archives/*.deb"
      - "/var/lib/docker"
      - "/var/log"
      - "/var/tmp"
    backup_identifier: ""
    backup_remote_connection: "root-fm1395-rsync-net"
    backup_remote_base_path: "backups-pc-root@Jasons-Framework-Laptop"
    backup_remote_connection_ssh_options: "-F /root/.ssh/config -v"
    backup_remote_host_name: 'fm1395.rsync.net'
    # Run: ssh-keyscan -t ed25519 fm1395.rsync.net
    backup_remote_host_key: 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINdUkGe6kKn5ssz4WRZKjcws0InbQqZayenzk9obmP1'

  pre_tasks:
    - name: Copy the ssh config file from /home/jason/.ssh/config into /root/.ssh/config.
      template:
        src: /home/jason/.ssh/config
        dest: /root/.ssh/config

  roles:
    - geerlingguy.backup

  post_tasks:
    - name: Set rsync args to -avz.
      lineinfile:
        state: present
        path: "{{ backup_path }}/backup.sh"
        regex: '^\$RSYNC (?:-aqz) (.*)'
        line: '$RSYNC -vv -az \g<1>'
        backrefs: yes

    - name: Create a dry-run script.
      copy:
        src: "{{ backup_path }}/backup.sh"
        dest: "{{ backup_path }}/backup-dry-run.sh"
        mode: "0744"
        remote_src: true

    - name: Add the --dry-run line.
      lineinfile:
        state: present
        path: "{{ backup_path }}/backup-dry-run.sh"
        regex: '^\$RSYNC (.*)'
        line: '$RSYNC --dry-run \g<1> | grep -v hiding | grep -v uptodate | grep -v expand | grep -v protecting'
        backrefs: yes
